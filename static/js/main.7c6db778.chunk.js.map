{"version":3,"sources":["components/employees/employees.module.css","dall/api.ts","components/store/reducer.ts","components/selectors/selectors.ts","Img/ava3.png","components/employees/employees.tsx","components/main/main.tsx","App.tsx","reportWebVitals.ts","components/store/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","Api","get","then","res","data","initialState","employees","getEmployeesSelectors","state","reducerPage","Employees","useSelector","useState","editMode","setEditMode","name","setName","lastName","setLastName","email","setEmail","dispatch","useDispatch","useEffect","a","result","type","console","log","deleteEmployee","e","id","currentTarget","dataset","deleteEmployeesAC","className","s","popup","popupContent","onClick","x","value","placeholder","onChange","data-update","addEmployeesAC","last_name","first_name","avatar","map","item","Card","container","data-id","CardContent","src","alt","style","width","ava","Typography","variant","component","textAlign","addBtn","Button","color","Main","PATH","App","AppBar","position","Toolbar","to","path","render","exact","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c6db778.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"employees_container__yCd8K\",\"popup\":\"employees_popup__2b71X\",\"popupContent\":\"employees_popupContent__3AWUo\",\"x\":\"employees_x__13CCv\",\"hide\":\"employees_hide__334kU\",\"addBtn\":\"employees_addBtn__3i2VT\"};","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://reqres.in/api/users?'\r\n})\r\n\r\n\r\nexport const Api = {\r\n    getEmployees() {\r\n        return instance.get<TypeResponseData>('per_page=12').then(res => res.data)\r\n    }\r\n}\r\nexport type TypeDataEmployees = {\r\n    id: number\r\n    email: string\r\n    first_name: string\r\n    last_name: string\r\n    avatar: string\r\n}\r\nexport type TypeResponseData = {\r\n    page: number\r\n    per_page: number\r\n    total: number\r\n    total_pages: number\r\n    data: TypeDataEmployees[]\r\n    support: {\r\n        url: string\r\n        text: string\r\n    }\r\n}","import {Api, TypeDataEmployees} from \"../../dall/api\"\r\nimport {Dispatch} from \"redux\"\r\n\r\nlet initialState: TypeInitialState = {\r\n    employees:[]\r\n}\r\nconst getEmployeesAC = (employees:TypeDataEmployees[])=>{\r\n    return{\r\n        type:'/reducer/GET_EMPLOYEES',\r\n        employees\r\n    } as const\r\n}\r\nexport const addEmployeesAC = (employees:TypeDataEmployees)=>{\r\n    return{\r\n        type:'/reducer/ADD_EMPLOYEES',\r\n        employees\r\n    } as const\r\n}\r\nexport const deleteEmployeesAC = (id:number)=>{\r\n    return{\r\n        type:'/reducer/DELETE_EMPLOYEES',\r\n        id\r\n    } as const\r\n}\r\n\r\nexport const reducer = (state: TypeInitialState = initialState, action: TypeActions): TypeInitialState => {\r\n    switch (action.type) {\r\n        case \"/reducer/GET_EMPLOYEES\":{\r\n            return {\r\n                ...state,\r\n                employees:action.employees\r\n            }\r\n        }\r\n        case \"/reducer/ADD_EMPLOYEES\":{\r\n            return {\r\n                ...state,\r\n                employees:[...state.employees,action.employees]\r\n            }\r\n        }\r\n        case \"/reducer/DELETE_EMPLOYEES\":{\r\n            return {\r\n                ...state,\r\n                employees:state.employees.filter(item=> item.id!==action.id)\r\n\r\n\r\n            }\r\n\r\n\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getEmployeesTC = ()=> async (dispatch:Dispatch<TypeActions>)=>{\r\n    try {\r\n        let result = await  Api.getEmployees()\r\n        dispatch(getEmployeesAC(result.data))\r\n    }catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\ntype TypeActions  =\r\n    | ReturnType<typeof getEmployeesAC>\r\n    | ReturnType<typeof addEmployeesAC>\r\n    | ReturnType<typeof deleteEmployeesAC>\r\ntype TypeInitialState = {\r\n        employees:TypeDataEmployees[]\r\n}","import {AppRootStateType} from \"../store/store\";\r\n\r\nexport const getEmployeesSelectors = (state: AppRootStateType) => {\r\n    return state.reducerPage.employees\r\n}\r\nexport type TypeGetAllEmployees = ReturnType<typeof getEmployeesSelectors>","export default __webpack_public_path__ + \"static/media/ava3.f64a2290.png\";","import React, {MouseEvent, useEffect, useState} from \"react\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {addEmployeesAC, deleteEmployeesAC, getEmployeesTC} from \"../store/reducer\"\r\nimport {getEmployeesSelectors, TypeGetAllEmployees} from \"../selectors/selectors\"\r\nimport ava from '../../Img/ava3.png'\r\nimport s from './employees.module.css'\r\nimport {Button, Card, CardContent, Typography} from \"@material-ui/core\"\r\n\r\n\r\nconst Employees = () => {\r\n    const id = 123;\r\n    const employees: TypeGetAllEmployees = useSelector(getEmployeesSelectors)\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [name, setName] = useState<string>('')\r\n    const [lastName, setLastName] = useState<string>('')\r\n    const [email, setEmail] = useState<string>('')\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getEmployeesTC())\r\n    }, [dispatch])\r\n\r\n    const addEmployee = () => {\r\n        setEditMode(false)\r\n        dispatch(addEmployeesAC({\r\n            email,\r\n            last_name: lastName,\r\n            first_name: name,\r\n            avatar: '',\r\n            id: id+1\r\n        }))\r\n    }\r\n    const deleteEmployee = (e:MouseEvent<HTMLSpanElement>)=>{\r\n        setEditMode(false)\r\n        const id = e.currentTarget.dataset.id\r\n        dispatch(deleteEmployeesAC(+id!))\r\n    }\r\n    return <>\r\n\r\n        {editMode ? <div className={s.popup}>\r\n            <div className={s.popupContent}>\r\n                <span onClick={() => setEditMode(false)} className={s.x}>X</span>\r\n                <input value={name} placeholder={'Name'} name={'name'} onChange={(e) => setName(e.currentTarget.value)}\r\n                       type=\"text\"/>\r\n                <input value={lastName} placeholder={'Last Name'} name={'lastName'}\r\n                       onChange={(e) => setLastName(e.currentTarget.value)} type=\"text\"/>\r\n                <input value={email} placeholder={'Email'} name={'email'}\r\n                       onChange={(e) => setEmail(e.currentTarget.value)} type=\"text\"/>\r\n                <button data-update={'add'} onClick={addEmployee}>Add</button>\r\n            </div>\r\n        </div> : \"\"}\r\n        {employees.map((item) => {\r\n\r\n            return <Card className={s.container} key={item.id} >\r\n                <span   data-id={item.id} onClick={deleteEmployee} className={s.x}>X</span>\r\n                <CardContent>\r\n                            {item.avatar ?\r\n                                <img src={item.avatar} alt={'Avatar'}/> :\r\n                                <img style={{width: '320px'}} src={ava} alt={'Avatar'}/>\r\n                            }\r\n                        <Typography variant=\"h6\" component=\"h1\" style={{textAlign: 'center'}}>\r\n                            {item.first_name} {item.last_name}\r\n                        </Typography>\r\n                   <div style={{textAlign: 'center'}}>\r\n                       {item.email}\r\n                   </div>\r\n                </CardContent>\r\n            </Card>\r\n        })}\r\n        <div className={s.addBtn}>\r\n        <Button color={\"primary\"} variant=\"contained\" onClick={() => setEditMode(true)}>Add</Button>\r\n        </div>\r\n    </>\r\n\r\n}\r\nexport default Employees","import React from \"react\";\r\nconst Main = ()=>{\r\n    return<>\r\n       Main\r\n    </>\r\n}\r\nexport default  Main","import React from 'react';\nimport {HashRouter, NavLink, Redirect, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Employees from \"./components/employees/employees\";\nimport Main from \"./components/main/main\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nconst PATH = {\n    main: '/main',\n    employees: '/employees'\n}\n\nfunction App() {\n    return <>\n        <HashRouter>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <NavLink to={PATH.main}>Главная</NavLink>\n                    <NavLink to={PATH.employees}>Сотрудники</NavLink>\n                </Toolbar>\n            </AppBar>\n\n            <div>\n\n                <div>\n                    <div>\n                        <Switch>\n                            <Route path={PATH.employees}\n                                   render={() => <Employees/>}/>\n                            <Route exact path={PATH.main}\n                                   render={() => <Main/>}/>\n                            <Redirect from='/' to={PATH.employees}/>\n\n                        </Switch>\n                    </div>\n                </div>\n\n\n            </div>\n        </HashRouter>\n    </>;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore} from \"redux\";\r\nimport {applyMiddleware} from \"redux\";\r\nimport {combineReducers} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {reducer} from \"./reducer\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    reducerPage:reducer\r\n\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./components/store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n    <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}